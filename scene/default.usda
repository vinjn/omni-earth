#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (-74.04022754130779, 21.310379562979193, -108.63163916272133)
                double3 target = (-86.66274674643006, 9.563280082829145, 25.044934541070816)
            }
            dictionary Right = {
                double3 position = (-50000, 0, 0)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (0, 50000, 0)
                double radius = 500
            }
            string boundCamera = "/World/Camera"
        }
        dictionary omni_layer = {
            string authoring_layer = "./default.usda"
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            bool "rtx:directLighting:domeLight:enabledInReflections" = 1
            bool "rtx:fog:enabled" = 1
            float3 "rtx:fog:fogColor" = (0.60392, 0.75294, 0.9098)
            double "rtx:fog:fogColorIntensity" = 0.25
            double "rtx:fog:fogDistanceDensity" = 0.0005
            double "rtx:fog:fogEndDist" = 500000
            double "rtx:fog:fogHeightDensity" = 0.2
            double "rtx:fog:fogHeightFalloff" = 0
            double "rtx:fog:fogStartDist" = 100000
            double "rtx:fog:fogStartHeight" = 6000
            bool "rtx:indirectDiffuse:enabled" = 1
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            int "rtx:post:histogram:enabled" = 1
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (5, 5, 5)
            bool "rtx:post:lensFlares:enabled" = 1
            double "rtx:post:lensFlares:flareScale" = 0.25
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            double "rtx:post:tonemap:filmIso" = 20
            double "rtx:post:tonemap:irayReinhard:burnHighlights" = 1
            double "rtx:post:tonemap:irayReinhard:crushBlacks" = 0
            double "rtx:post:tonemap:irayReinhard:saturation" = 1.1
            int "rtx:post:tonemap:op" = 7
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
        }
    }
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    token visibility = "inherited"

    def Camera "Camera" (
        hide_in_stage_window = false
        no_delete = false
    )
    {
        float4[] clippingPlanes = []
        float2 clippingRange = (1, 10000000000)
        float focalLength = 17
        float focusDistance = 0
        float fStop = 0
        float horizontalAperture = 20.955
        float horizontalApertureOffset = 0
        custom vector3d omni:kit:centerOfInterest = (0, 0, -87982.57548284995)
        token projection = "perspective"
        uniform token purpose = "default"
        double shutter:close = 0
        double shutter:open = 0
        uniform token stereoRole = "mono"
        float verticalAperture = 15.2908
        float verticalApertureOffset = 0
        token visibility = "inherited"
        float3 xformOp:rotateYXZ = (1.1385001, 94.53047, 14.077174)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (194620.02647250623, -41776.1528900498, -328547.6757205209)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYXZ", "xformOp:scale"]
    }
}

def CesiumDataPrim "Cesium"
{
    double cesium:georeferenceOrigin:height = 520
    double cesium:georeferenceOrigin:latitude = 37.3421524
    double cesium:georeferenceOrigin:longitude = -121.9836962
    string cesium:projectDefaultIonAccessToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIyZTA0MDlmYi01Y2RhLTQ0MjQtYjBlOS1kMmZhMzQ0OWRkNGYiLCJpZCI6MjU5LCJpYXQiOjE2ODU2MzExMTF9.y2CrqatkaHKHcj6NIDJ8ioll-tnOi-2CblnzI6iUays"
    string cesium:projectDefaultIonAccessTokenId = ""
}

over "OmniverseKit_Persp"
{
    float2 clippingRange = (1, 10000000000)
    float focalLength = 17
}

def Xform "Cesium_Tileset" (
    prepend apiSchemas = ["CesiumTilesetSchemaAPI"]
)
{
    float cesium:culledScreenSpaceError = 70
    bool cesium:enableFogCulling = 1
    bool cesium:enableFrustumCulling = 1
    bool cesium:enforceCulledScreenSpaceError = 1
    bool cesium:forbidHoles = 0
    string cesium:ionAccessToken = ""
    int64 cesium:ionAssetId = 0
    uint cesium:loadingDescendantLimit = 40
    uint64 cesium:maximumCachedBytes = 536870912
    float cesium:maximumScreenSpaceError = 32
    uint cesium:maximumSimultaneousTileLoads = 40
    bool cesium:preloadAncestors = 1
    bool cesium:preloadSiblings = 1
    bool cesium:showCreditsOnScreen = 1
    bool cesium:smoothNormals = 0
    uniform token cesium:sourceType = "url"
    bool cesium:suspendUpdate = 0
    string cesium:url = "https://tile.googleapis.com/v1/3dtiles/root.json?key=AIzaSyC2PMYr_ZaMJT5DdZ8WJNYMwB0lDyvx5q8"
}

def Camera "WorldDroneCamera0" (
    prepend apiSchemas = ["PhysxCameraDroneAPI"]
)
{
    custom rel physxCamera:subject
    prepend rel physxCamera:subject = </World>
    float physxDroneCamera:feedForwardVelocityGain = 0.1
    float physxDroneCamera:followDistance = 3000
    float physxDroneCamera:followHeight = 1500
    float physxDroneCamera:horizontalVelocityGain = 1
    float physxDroneCamera:maxDistance = 10000
    float physxDroneCamera:maxSpeed = 2000
    float3 physxDroneCamera:positionOffset = (0, 0, 0)
    float physxDroneCamera:rotationFilterTimeConstant = 0.2
    float physxDroneCamera:velocityFilterTimeConstant = 1
    float physxDroneCamera:verticalVelocityGain = 1
    float3 xformOp:rotateXYZ = (0, -0, 0)
    float3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
}

def Xform "Environment"
{
    custom float time:current = 18.08789
    custom float time:end = 18.08789
    custom float time:start = 6.221052

    def Xform "sky" (
        prepend references = @https://omniverse-content-production.s3.us-west-2.amazonaws.com/Assets/Skies/2022_1/Skies/Dynamic/CloudySky.usd@
    )
    {
        float3 xformOp:rotateZYX = (0, 0, 0)

        over "AxisNorth"
        {
            double3 xformOp:rotateZYX = (0, 0, 0)

            over "AxisLatitude"
            {
                double3 xformOp:rotateZYX = (0, 0, 51.426)

                over "AxisSHA"
                {
                    double3 xformOp:rotateZYX = (89.02510622496118, 0, 0)

                    over "AxisDeclination"
                    {
                        double3 xformOp:rotateZYX = (0, 0, 7.999834338981633)

                        over "DistantLight"
                        {
                            color3f color = (0.3997849, 0.18495308, 0.059913963)
                            float intensity = 5000
                        }
                    }
                }
            }

            over "AxisAzimuth"
            {
                double3 xformOp:rotateZYX = (0, 84.23578588651, 0)

                over "AxisElevation"
                {
                    double3 xformOp:rotateZYX = (0, 0, 5.6411810277356995)
                }
            }
        }

        over "DomeLight"
        {
            color3f color = (0.48, 0.49, 0.505)
            float diffuse = 1
            float exposure = 1
            float intensity = 1
            float specular = 1
            token visibility = "inherited"
            bool visibleInPrimaryRay = 1
            float3 xformOp:rotateZYX = (270, 0, 0)
        }

        over "Looks"
        {
            over "SkyMaterial"
            {
                over "Shader"
                {
                    float inputs:Azimuth = 84.23579
                    float inputs:DayOfYear = 100
                    float inputs:Declination = 7.9998345
                    float inputs:Elevation = 5.641181
                    float inputs:Latitude = 51.426
                    float inputs:Longitude = -0.985
                    float inputs:NorthOrientation = 0
                    float inputs:SHA = 90.97489
                    float inputs:TimeOfDay = 18.08789
                }
            }
        }
    }
}

